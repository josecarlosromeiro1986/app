{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\GIT\\\\Mobile\\\\app\\\\src\\\\pages\\\\Login.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport api from \"../services/api\";\nimport logo from \"../../assets/logo-faccar.png\";\nexport default function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  console.log(email);\n  console.log(senha);\n\n  function handleSubmit() {\n    var response, _response$data$users, _id, email;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Solicitando');\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.post('/users/login', {\n              \"email\": email,\n              \"senha\": senha\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response.data.users);\n            _response$data$users = response.data.users, _id = _response$data$users._id, email = _response$data$users.email;\n\n            if (!_id) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('email', email));\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('id', _id));\n\n          case 11:\n            navigation.navigate('Index');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: style.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: style.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: style.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: style.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Informe seu e-mail\"), React.createElement(TextInput, {\n    style: style.input,\n    placeholder: \"Seu e-mail\",\n    autoCompleteType: \"email\",\n    placeholderTextColor: \"#999\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    autoCorrect: false,\n    value: email,\n    onChangeText: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: style.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Informe sua senha\"), React.createElement(TextInput, {\n    style: style.input,\n    placeholder: \"senha\",\n    secureTextEntry: true,\n    autoCompleteType: \"password\",\n    placeholderTextColor: \"#999\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: senha,\n    onChangeText: setSenha,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleSubmit,\n    style: style.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: style.textButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Logar\")), React.createElement(Text, {\n    style: style.recoverPass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Recuperar senha\")));\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logo: {\n    resizeMode: 'contain'\n  },\n  form: {\n    alignSelf: 'stretch',\n    paddingHorizontal: 30,\n    marginTop: 30\n  },\n  label: {\n    fontWeight: 'bold',\n    color: '#444',\n    marginBottom: 5,\n    marginTop: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    fontSize: 16,\n    color: '#444',\n    borderRadius: 5\n  },\n  button: {\n    height: 40,\n    backgroundColor: '#028134',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginTop: 10\n  },\n  textButton: {\n    color: '#FFF'\n  },\n  recoverPass: {\n    color: '#aaa',\n    marginTop: 10,\n    marginBottom: 10,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/GIT/Mobile/app/src/pages/Login.js"],"names":["React","useState","api","logo","Login","email","setEmail","senha","setSenha","console","log","handleSubmit","post","response","data","users","_id","AsyncStorage","setItem","navigation","navigate","style","container","form","label","input","button","textButton","recoverPass","StyleSheet","create","flex","justifyContent","alignItems","resizeMode","alignSelf","paddingHorizontal","marginTop","fontWeight","color","marginBottom","borderWidth","borderColor","paddingVertical","fontSize","borderRadius","height","backgroundColor","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { View, Image, Text, TextInput, StyleSheet, TouchableOpacity, AsyncStorage } from 'react-native'\r\n\r\nimport api from '../services/api';\r\n\r\nimport logo from '../../assets/logo-faccar.png';\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    console.log(email);\r\n    console.log(senha);\r\n\r\n    async function handleSubmit() {\r\n        console.log('Solicitando');\r\n\r\n        //email e senha\r\n        const response = await api.post('/users/login', {\r\n            \"email\" : email,\r\n            \"senha\" : senha\r\n        });\r\n        \r\n        console.log(response.data.users);\r\n\r\n        const { _id, email } = response.data.users;\r\n\r\n        if (_id) {\r\n            await AsyncStorage.setItem('email', email);\r\n            await AsyncStorage.setItem('id', _id);\r\n            navigation.navigate('Index');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n            <Image source={logo} style={style.logo} />\r\n\r\n            <View style={style.form}>\r\n                <Text style={style.label}>Informe seu e-mail</Text>\r\n                <TextInput\r\n                    style={style.input}\r\n                    placeholder=\"Seu e-mail\"\r\n                    autoCompleteType=\"email\"\r\n                    placeholderTextColor=\"#999\"\r\n                    autoCapitalize=\"none\"\r\n                    keyboardType=\"email-address\"\r\n                    autoCorrect={false}\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                ></TextInput>\r\n\r\n                <Text style={style.label}>Informe sua senha</Text>\r\n                <TextInput\r\n                    style={style.input}\r\n                    placeholder=\"senha\"\r\n                    secureTextEntry={true}\r\n                    autoCompleteType=\"password\"\r\n                    placeholderTextColor=\"#999\"\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                    value={senha}\r\n                    onChangeText={setSenha}\r\n                ></TextInput>\r\n\r\n                <TouchableOpacity onPress={handleSubmit} style={style.button}>\r\n                    <Text style={style.textButton}>Logar</Text>\r\n                </TouchableOpacity>\r\n                <Text style={style.recoverPass}>Recuperar senha</Text>\r\n            </View>\r\n        </View >\r\n    );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    logo: {\r\n        resizeMode: 'contain',\r\n    },\r\n    form: {\r\n        alignSelf: 'stretch',\r\n        paddingHorizontal: 30,\r\n        marginTop: 30,\r\n    },\r\n    label: {\r\n        fontWeight: 'bold',\r\n        color: '#444',\r\n        marginBottom: 5,\r\n        marginTop: 10\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        fontSize: 16,\r\n        color: '#444',\r\n        borderRadius: 5\r\n    },\r\n    button: {\r\n        height: 40,\r\n        backgroundColor: '#028134',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 5,\r\n        marginTop: 10,\r\n\r\n    },\r\n    textButton: {\r\n        color: '#FFF'\r\n    },\r\n    recoverPass: {\r\n        color: '#aaa',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        textAlign: 'center'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}